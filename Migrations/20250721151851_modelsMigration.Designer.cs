// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TiendaChurrascosApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250721151851_modelsMigration")]
    partial class modelsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Churrasco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modalidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Porciones")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Termino")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoCarne")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrecio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Churrascos");
                });

            modelBuilder.Entity("ChurrascoGuarnicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChurrascoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsExtra")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuarnicionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChurrascoId");

                    b.HasIndex("GuarnicionId");

                    b.ToTable("ChurrascoGuarniciones");
                });

            modelBuilder.Entity("Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("ComboChurrasco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChurrascoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComboId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChurrascoId");

                    b.HasIndex("ComboId");

                    b.ToTable("ComboChurrascos");
                });

            modelBuilder.Entity("ComboDulce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComboId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DulceTipicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TamañoCaja")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComboId");

                    b.HasIndex("DulceTipicoId");

                    b.ToTable("ComboDulces");
                });

            modelBuilder.Entity("DulceTipico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioCaja12")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioCaja24")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioCaja6")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Dulces");
                });

            modelBuilder.Entity("Guarnicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Guarniciones");
                });

            modelBuilder.Entity("Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("PedidoChurrasco", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChurrascoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoId", "ChurrascoId");

                    b.HasIndex("ChurrascoId");

                    b.ToTable("PedidoChurrascos");
                });

            modelBuilder.Entity("PedidoDulce", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DulceTipicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TamañoCaja")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidoId", "DulceTipicoId");

                    b.HasIndex("DulceTipicoId");

                    b.ToTable("PedidoDulces");
                });

            modelBuilder.Entity("TiendaChurrascosApi.Models.ConsumoCarne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LibrasPorPorcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoCarne")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConsumoCarnes");
                });

            modelBuilder.Entity("TiendaChurrascosApi.Models.RecetaGuarnicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CantidadPorPorcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guarnicion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UnidadInventario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RecetaGuarniciones");
                });

            modelBuilder.Entity("ChurrascoGuarnicion", b =>
                {
                    b.HasOne("Churrasco", "Churrasco")
                        .WithMany("Guarniciones")
                        .HasForeignKey("ChurrascoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guarnicion", "Guarnicion")
                        .WithMany("Churrascos")
                        .HasForeignKey("GuarnicionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Churrasco");

                    b.Navigation("Guarnicion");
                });

            modelBuilder.Entity("ComboChurrasco", b =>
                {
                    b.HasOne("Churrasco", "Churrasco")
                        .WithMany()
                        .HasForeignKey("ChurrascoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Combo", "Combo")
                        .WithMany("Churrascos")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Churrasco");

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("ComboDulce", b =>
                {
                    b.HasOne("Combo", "Combo")
                        .WithMany("Dulces")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DulceTipico", "DulceTipico")
                        .WithMany()
                        .HasForeignKey("DulceTipicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("DulceTipico");
                });

            modelBuilder.Entity("PedidoChurrasco", b =>
                {
                    b.HasOne("Churrasco", "Churrasco")
                        .WithMany()
                        .HasForeignKey("ChurrascoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pedido", "Pedido")
                        .WithMany("Churrascos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Churrasco");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("PedidoDulce", b =>
                {
                    b.HasOne("DulceTipico", "DulceTipico")
                        .WithMany()
                        .HasForeignKey("DulceTipicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pedido", "Pedido")
                        .WithMany("Dulces")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DulceTipico");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Churrasco", b =>
                {
                    b.Navigation("Guarniciones");
                });

            modelBuilder.Entity("Combo", b =>
                {
                    b.Navigation("Churrascos");

                    b.Navigation("Dulces");
                });

            modelBuilder.Entity("Guarnicion", b =>
                {
                    b.Navigation("Churrascos");
                });

            modelBuilder.Entity("Pedido", b =>
                {
                    b.Navigation("Churrascos");

                    b.Navigation("Dulces");
                });
#pragma warning restore 612, 618
        }
    }
}
